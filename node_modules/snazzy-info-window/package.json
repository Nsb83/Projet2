{
  "_from": "snazzy-info-window@^1.1.0",
  "_id": "snazzy-info-window@1.1.1",
  "_inBundle": false,
  "_integrity": "sha1-O02k9Bw6pqpK2HjsuXw8LrXImy8=",
  "_location": "/snazzy-info-window",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "snazzy-info-window",
    "fetchSpec": "^1.1.0",
    "name": "snazzy-info-window",
    "raw": "snazzy-info-window@^1.1.0",
    "rawSpec": "^1.1.0",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/snazzy-info-window/-/snazzy-info-window-1.1.1.tgz",
  "_shasum": "3b4da4f41c3aa6aa4ad878ecb97c3c2eb5c89b2f",
  "_shrinkwrap": null,
  "_spec": "snazzy-info-window@^1.1.0",
  "_where": "/home/mathieu/Bureau/lyon-0918-java1-festmap",
  "authors": [
    "Adam Krogh",
    "Darcy Chan",
    "Joel Kravets",
    "Mike Chow"
  ],
  "bugs": {
    "url": "https://github.com/atmist/snazzy-info-window/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Customizable info windows using the Google Maps JavaScript API.",
  "devDependencies": {
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-es2015-modules-umd": "^6.23.0",
    "babel-preset-es2015": "^6.22.0",
    "eslint": "^3.17.1",
    "eslint-config-airbnb-base": "^11.1.1",
    "eslint-config-es5": "^0.5.0",
    "eslint-plugin-import": "^2.2.0",
    "gulp": "^3.9.1",
    "gulp-add-src": "^0.2.0",
    "gulp-autoprefixer": "^3.1.1",
    "gulp-babel": "^6.1.2",
    "gulp-bump": "^2.7.0",
    "gulp-eslint": "^3.0.1",
    "gulp-filter": "^5.0.0",
    "gulp-git": "^2.0.1",
    "gulp-help": "^1.6.1",
    "gulp-if": "^2.0.2",
    "gulp-rename": "^1.2.2",
    "gulp-sass": "^3.1.0",
    "gulp-sass-lint": "^1.3.2",
    "gulp-sourcemaps": "^2.4.1",
    "gulp-tag-version": "^1.3.0",
    "gulp-uglify": "^2.1.0",
    "gulp-uglifycss": "^1.0.6",
    "merge-stream": "^1.0.1",
    "npm-check-updates": "^2.10.3",
    "yargs": "^7.0.1"
  },
  "files": [
    "dist/"
  ],
  "homepage": "https://github.com/atmist/snazzy-info-window",
  "keywords": [
    "google",
    "google-maps",
    "info",
    "maps",
    "snazzy",
    "snazzy-maps",
    "window"
  ],
  "license": "MIT",
  "main": "dist/snazzy-info-window.min.js",
  "name": "snazzy-info-window",
  "optionalDependencies": {},
  "readme": "# Snazzy Info Window\r\n\r\n[![npm](https://img.shields.io/npm/v/snazzy-info-window.svg?label=yarn)](https://www.npmjs.com/package/snazzy-info-window) [![npm](https://img.shields.io/npm/v/snazzy-info-window.svg)](https://www.npmjs.com/package/snazzy-info-window) [![Bower](https://img.shields.io/bower/v/snazzy-info-window.svg)](https://github.com/atmist/snazzy-info-window) [![Dependencies](https://david-dm.org/atmist/snazzy-info-window.svg)](https://david-dm.org/atmist/snazzy-info-window) [![devDependencies](https://david-dm.org/atmist/snazzy-info-window/dev-status.svg)](https://david-dm.org/atmist/snazzy-info-window#info=devDependencies)\r\n\r\nSnazzy Info Window is a plugin for customizable info windows using the Google Maps JavaScript API.\r\nOpen sourced by the people that created [Snazzy Maps](https://snazzymaps.com).\r\n\r\n## Features\r\n\r\n- **Responsive sizing**\r\n  - The info window will size properly for a variety of screen and map sizes.\r\n- **Custom styling**\r\n  - Customize the border radius, shadow, background color, border, and much more.\r\n  - Supports SCSS styling.\r\n- **Dynamic content**\r\n  - Supports dynamic content after initialization with proper resizing.\r\n- **Multiple placements**\r\n  - Place the info window to the top, bottom, right, or left of the marker.\r\n\r\n## Examples\r\n\r\n- [Simple](/examples#simple)\r\n- [Multiple markers](/examples#multiple-markers)\r\n- [Dynamic content](/examples#dynamic-content)\r\n- [Set position](/examples#set-position)\r\n- [Styling with SCSS](/examples#scss-styles)\r\n- [Styling with JavaScript](/examples#js-styles)\r\n- [Complex styling](/examples#complex-styles)\r\n\r\n## Installation\r\n\r\nYou can install Snazzy Info Window from the following package managers:\r\n\r\n```sh\r\nyarn add snazzy-info-window\r\n```\r\n\r\n```sh\r\nnpm install --save snazzy-info-window\r\n```\r\n\r\n```sh\r\nbower install --save snazzy-info-window\r\n```\r\n\r\n## Quick Start\r\n1. Include all the required files.\r\n\r\n  ```html\r\n  <link rel=\"stylesheet\" href=\"snazzy-info-window.min.css\">\r\n  <script src=\"https://maps.googleapis.com/maps/api/js?key={{YOUR KEY HERE}}\"></script>\r\n  <script src=\"snazzy-info-window.min.js\"></script>\r\n  ```\r\n\r\n1. Create a new `SnazzyInfoWindow` object with a marker.\r\n  ```js\r\n  var infoWindow = new SnazzyInfoWindow({\r\n      marker: marker,\r\n      content: 'Snazzy!'\r\n  });\r\n  ```\r\n\r\n## Public Methods\r\n\r\n#### open()\r\n\r\nWill attempt to open the info window.\r\n\r\n#### close()\r\n\r\nWill attempt to close the info window.\r\n\r\n#### isOpen()\r\n\r\nDetermines if the info window is open.\r\n\r\n#### destroy()\r\n\r\nWill destroy the info window. If the info window is open it will be forced\r\nclosed bypassing the regular `beforeClose` callback. All Google Map event\r\nlisteners associated to this info window will be removed.\r\n\r\n#### setContent(content)\r\n\r\nSet the content in the info window. This can be called at any time.\r\n\r\n- Parameter: `content`\r\n  - _string_ or _DOM Element_\r\n\r\n#### setPosition(latLng)\r\n\r\nSet the `position` of the info window. A valid Google Map instance must be associated to the info window. This could be either through the `marker` or `map` option.\r\n\r\n- Parameter: `latLng`\r\n  - _[LatLng]_ or _[LatLngLiteral]_\r\n\r\n#### setWrapperClass(wrapperClass)\r\n\r\nSet the `wrapperClass` of the info window. This can be called at any time.\r\n\r\n- Parameter: `wrapperClass`\r\n  - _string_\r\n\r\n#### getWrapper()\r\n\r\nWill return the DOM Element for the wrapper container of the info window.\r\n\r\n## Options\r\n\r\n#### marker\r\n\r\nThe Google Maps marker associated to this info window.\r\n\r\n- Type: _[Marker]_\r\n\r\n#### content\r\n\r\nThe text or DOM Element to insert into the info window body.\r\n\r\n- Type: _string_ or _DOM Element_\r\n\r\n#### placement\r\n\r\nChoose where you want the info window to be displayed, relative to the marker.\r\n\r\n- Type: _string_\r\n- Default: `'top'`\r\n- Possible Values: `'top'`, `'bottom'`, `'left'`, `'right'`\r\n\r\n#### map\r\n\r\nThe Google Map associated to this info window. Only required if you are not using a `marker`.\r\n\r\n- Type: _[Map]_\r\n\r\n#### position\r\n\r\nThe latitude and longitude where the info window is anchored. The `offset` will default to `0px` when using this option. Only required if you are not using a `marker`.\r\n\r\n- Type: _[LatLng]_ or _[LatLngLiteral]_\r\n\r\n#### wrapperClass\r\n\r\nAn optional CSS class to assign to the wrapper container of the info window. Can be\r\nused for applying custom CSS to the info window.\r\n\r\n- Type: _string_\r\n\r\n#### maxWidth\r\n\r\nThe max width in pixels of the info window.\r\n\r\n- Type: _numeric_\r\n- Example: `200`\r\n\r\n#### maxHeight\r\n\r\nThe max height in pixels of the info window.\r\n\r\n- Type: _numeric_\r\n- Example: `200`\r\n\r\n#### offset\r\n\r\nThe offset from the marker. This value should be different for each `placement`.\r\nBy default the offset is configured for the default Google Maps marker.\r\n\r\n- Type: _object_\r\n- Example:\r\n\r\n  ```js\r\n  offset: {\r\n    top: '10px',\r\n    left: '20px'\r\n  }\r\n  ```\r\n\r\n#### edgeOffset\r\n\r\nThe offset from the map edge in pixels which is used when panning an info window\r\ninto view.\r\n\r\n- Type: _object_\r\n- Example:\r\n\r\n  ```js\r\n  edgeOffset: {\r\n    top: 20,\r\n    right: 20,\r\n    bottom: 20,\r\n    left: 20\r\n  }\r\n  ```\r\n\r\n#### backgroundColor\r\n\r\nThe color to use for the background of the info window.\r\n\r\n- Type: _string_\r\n- Possible Values: Any valid CSS color value.\r\n- Examples: `'#FF0000'`, `'blue'`\r\n\r\n#### padding\r\n\r\nA custom padding size around the content of the info window.\r\n\r\n- Type: _string_\r\n- Possible Values: Any valid CSS size value.\r\n- Examples: `'10px'`, `'2em'`, `'5%'`\r\n\r\n#### border\r\n\r\nA custom border around the info window. Set to `false` to completely remove\r\nthe border. The units used for `border` should be the same as `pointer`.\r\n\r\n- Type: _object_ or _boolean_\r\n- Example:\r\n\r\n  ```js\r\n  border: {\r\n    width: '10px',\r\n    color: '#FF0000'\r\n  }\r\n  ```\r\n\r\n#### borderRadius\r\n\r\nA custom CSS border radius property to specify the rounded corners of the info window.\r\n\r\n- Type: _string_\r\n- Example: `'2px 20px'`\r\n\r\n#### fontColor\r\n\r\nThe font color to use for the content inside the body of the info window.\r\n\r\n- Type: _string_\r\n- Possible Values: Any valid CSS color value.\r\n- Examples: `'#FF0000'`, `'blue'`\r\n\r\n\r\n#### fontSize\r\n\r\nThe font size to use for the content inside the body of the info window.\r\n\r\n- Type: _string_\r\n- Possible Values: Any valid CSS font size value.\r\n\r\n#### pointer\r\n\r\nThe height of the pointer from the info window to the marker. Set to `false`\r\nto completely remove the pointer. The units used for `pointer` should be the\r\nsame as `border`.\r\n\r\n- Type: _string_ or _boolean_\r\n- Possible Values: Any valid CSS size value.\r\n- Example: `'10px'`\r\n\r\n#### shadow\r\n\r\nThe CSS properties for the shadow of the info window. Set to `false` to\r\ncompletely remove the shadow.\r\n\r\n- Type: _object_ or _boolean_\r\n- Default:\r\n\r\n  ```js\r\n  shadow: {\r\n      h: '0px',\r\n      v: '3px',\r\n      blur: '6px',\r\n      spread: '0px',\r\n      opacity: 0.5,\r\n      color: '#000'\r\n  }\r\n  ```\r\n\r\n#### openOnMarkerClick\r\n\r\nDetermines if the info window will open when the marker is clicked. An internal\r\nlistener is added to the Google Maps `click` event which calls the `open()`\r\nmethod.\r\n\r\n- Type: _boolean_\r\n- Default: `true`\r\n\r\n#### closeOnMapClick\r\n\r\nDetermines if the info window will close when the map is clicked. An internal\r\nlistener is added to the Google Maps `click` event which calls the `close()`\r\nmethod. This will not activate on the Google Maps `drag` event when the user is\r\npanning the map.\r\n\r\n- Type: _boolean_\r\n- Default: `true`\r\n\r\n#### closeWhenOthersOpen\r\n\r\nDetermines if the info window will close when any other Snazzy Info Window is opened.\r\n\r\n- Type: _boolean_\r\n- Default: `false`\r\n\r\n#### showCloseButton\r\n\r\nDetermines if the info window will show a close button.\r\n\r\n- Type: _boolean_\r\n- Default: `true`\r\n\r\n#### closeButtonMarkup\r\n\r\nThe text or DOM Element to replace the default close button. No click handler or\r\npositioning is added to your markup if you use this option.\r\n\r\n- Type: _string_ or _DOM Element_\r\n\r\n#### panOnOpen\r\n\r\nDetermines if the info window will be panned into view when opened.\r\n\r\n- Type: _boolean_\r\n- Default: `true`\r\n\r\n### callbacks\r\n\r\nAll callbacks are optional and can access the info window instance via `this`.\r\n\r\n- Type: _object_\r\n- Example:\r\n\r\n    ```js\r\n    callbacks: {\r\n        beforeOpen: function(){},\r\n        open: function(){},\r\n        afterOpen: function(){},\r\n        beforeClose: function(){},\r\n        close: function(){},\r\n        afterClose: function(){}\r\n    }\r\n    ```\r\n\r\n#### beforeOpen\r\n\r\nCalled before the info window attempts to open. Return `false`\r\nto cancel the open.\r\n\r\n- Type: _function_\r\n- Example:\r\n\r\n  ```js\r\n  function() {\r\n      console.log('Cancel opening the info window.');\r\n      return false;\r\n  }\r\n  ```\r\n\r\n#### open\r\n\r\nCalled when the info window is opening. This occurs at the end of the\r\nOverlayView `onAdd()` implementation. At this point the info window is added\r\nto the DOM but is not drawn yet.\r\n\r\n- Type: _function_\r\n- Example:\r\n\r\n  ```js\r\n  function() {\r\n      console.log('Info window has started opening.');\r\n  }\r\n  ```\r\n\r\n#### afterOpen\r\n\r\nCalled when the info window has opened. This occurs at the end of the\r\nOverlayView `draw()` implementation. At this point the info window is added\r\nto the DOM and should be visible.\r\n\r\n- Type: _function_\r\n- Example:\r\n\r\n  ```js\r\n  function() {\r\n      console.log('Info window has opened.');\r\n  }\r\n  ```\r\n\r\n#### beforeClose\r\n\r\nCalled before the info window attempts to close. Return `false`\r\nto cancel the close.\r\n\r\n- Type: _function_\r\n- Example:\r\n\r\n  ```js\r\n  function() {\r\n      console.log('Cancel closing the info window.');\r\n      return false;\r\n  }\r\n  ```\r\n\r\n#### close\r\n\r\nCalled when the info window is closing. This occurs at the beginning of the\r\nOverlayView `onRemove()` implementation. At this point the info window is still\r\nin the DOM.\r\n\r\n- Type: _function_\r\n- Example:\r\n\r\n  ```js\r\n  function() {\r\n      console.log('Info window has started closing.');\r\n  }\r\n  ```\r\n\r\n#### afterClose\r\n\r\nCalled after the info window has closed. This occurs at the end of the\r\nOverlayView `onRemove()` implementation. At this point the info window should\r\nbe removed from the DOM.\r\n\r\n- Type: _function_\r\n- Example:\r\n\r\n  ```js\r\n  function() {\r\n      console.log('Info window has closed.');\r\n  }\r\n  ```\r\n\r\n## HTML Structure\r\n\r\n```html\r\n<div class=\"si-float-wrapper\">\r\n    <div class=\"si-wrapper-top\">\r\n        <div class=\"si-shadow-wrapper-top\">\r\n            <div class=\"si-shadow-frame\"></div>\r\n            <div class=\"si-shadow-pointer-top\">\r\n                <div class=\"si-shadow-inner-pointer-top\"></div>\r\n            </div>\r\n        </div>\r\n        <div class=\"si-content-wrapper\">\r\n            <button class=\"si-close-button\"></div>\r\n            <div class=\"si-content\">\r\n                <!-- Your content goes here -->\r\n            </div>\r\n        </div>\r\n        <div class=\"si-pointer-border-top\"></div>\r\n        <div class=\"si-pointer-bg-top\"></div>\r\n    </div>\r\n</div>\r\n```\r\n\r\n#### si-float-wrapper\r\n\r\nUsed to absolute position the info window in the Google Maps floatPane.\r\n\r\n#### si-wrapper-`placement`\r\n\r\nUsed to css translate the info window into the `placement`. The `wrapperClass`\r\nis added to this element's class list.\r\n\r\n#### si-shadow-wrapper-`placement`\r\n\r\nUsed to blend opacity for all shadow elements. This div will not be included if\r\n`shadow` is `false`.\r\n\r\n#### si-shadow-frame\r\n\r\nUsed to create the box shadow for the content wrapper. This element will not be\r\nincluded if `shadow` is `false`.\r\n\r\n#### si-shadow-pointer-`placement`\r\n\r\nUsed to show the pointer shadow in the `placement`. This element will not be included if\r\n`shadow` or `pointer` is `false`.\r\n\r\n#### si-shadow-inner-pointer-`placement`\r\n\r\nUsed to create the shadow for the pointer. This element will not be included if\r\n`shadow` or `pointer` is `false`.\r\n\r\n#### si-content-wrapper\r\n\r\nUsed for adding padding and border around the content.\r\n\r\n#### si-close-button\r\n\r\nUsed for showing the default close button in the top right hand corner. This\r\nelement will not be included if `showCloseButton` is `false`.\r\n\r\n#### si-content\r\n\r\nUsed for wrapping your content and showing a scroll bar when there is overflow.\r\n\r\n#### si-pointer-border-`placement`\r\n\r\nUsed for rendering the tip of the pointer when there is a border present.\r\nThis element will not be included if `pointer` or `border` is `false`.\r\n\r\n#### si-pointer-bg-`placement`\r\n\r\nUsed for rendering the inner tip of the pointer when there is a border present.\r\nThis element will not be included if `pointer` is `false`.\r\n\r\n\r\n## Contributing\r\n\r\nIf you find a bug with the library, please open an issue. If you would like fix\r\nan issue or contribute a feature, follow the steps outlined\r\n[here](./CONTRIBUTING.md).\r\n\r\n\r\n[LatLng]: https://developers.google.com/maps/documentation/javascript/reference#LatLng\r\n[LatLngLiteral]: https://developers.google.com/maps/documentation/javascript/reference#LatLngLiteral\r\n[Marker]: https://developers.google.com/maps/documentation/javascript/reference#Marker\r\n[Map]: https://developers.google.com/maps/documentation/javascript/reference#Map\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/atmist/snazzy-info-window.git"
  },
  "scripts": {
    "clean": "rimraf ./node_modules",
    "gulp": "gulp",
    "update-modules": "npm update --save-dev && npm-check-updates -u"
  },
  "version": "1.1.1"
}
